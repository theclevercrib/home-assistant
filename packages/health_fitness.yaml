binary_sensor:
  - platform: template
    sensors:
      william_medicated_recently:
        friendly_name: William Medicated Recently
        entity_id: sensor.time
        value_template: >
          {{ as_timestamp(now()) - state_attr('input_datetime.william_last_medicated','timestamp') < 57600 }}

sensor:
  - platform: fitbit
    clock_format: 12H
    monitored_resources:
      - "activities/heart"
      - "activities/steps"
      - "body/bmi"
      - "body/fat"
      - "body/weight"
          
input_datetime:
    william_last_medicated:
      name: Last Medicated
      has_date: true
      has_time: true

homeassistant:
  customize:
    sensor.fitness_tracker:
      icon: mdi:watch
      hidden: false
    binary_sensor.william_medicated_recently:
      icon: mdi:pill
      hidden: true
    input_datetime.william_last_medicated:
      icon: mdi:pill
    
group:
  william_health_fitness:
    name: William's Health & Fitness
    control: hidden
    entities:
      - sensor.fitness_tracker_state
      - sensor.bmi
      - sensor.body_fat
      - sensor.resting_heart_rate
      - sensor.steps
      - sensor.weight
      - binary_sensor.william_medicated_recently
      - input_datetime.william_last_medicated
      
automation:
  - id: 'Fitness Tracker Reminder'
    alias: Fitness Tracker Reminder
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.master_bathroom_shower
        to: 'off'
        for: '00:09:00'
    condition:
      condition: template
      value_template: "{{ states('sensor.william_fitness_tracker') not in ['Worn'] }}"
    action:
      - service: script.notify
        data:
          tell: william
          message: you weren't wearing your fitness tracker after showering!
          
script:
  william_medication_taken:
    alias: William's Medication Taken
    sequence:
      - service: input_datetime.set_datetime
        data_template:
          entity_id: input_datetime.william_last_medicated
          date: "{{ now().year }}-{{ now().month }}-{{ now().day }}"
          time: "{{ now().hour }}:{{ now().minute }}:{{ now().second }}"