## In Progress: Add Notification Queue Functionality with Interrupt

input_boolean:
  saying_notification:
    name: Saying Notification
    initial: off
    icon: mdi:chat-processing

telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    parse_mode: html
    allowed_chat_ids:
      - !secret telegram_kim
      - !secret telegram_william
      - !secret telegram_jordan

notify:
  - platform: file
    name: queue
    filename: notifications.txt

  - platform: telegram
    name: kim
    chat_id: !secret telegram_kim
  - platform: telegram
    name: william
    chat_id: !secret telegram_william
  - platform: telegram
    name: jordan
    chat_id: !secret telegram_jordan

  - platform: group
    name: caretakers
    services:
      - service: kim
  - platform: group
    name: upper_residence
    services:
      - service: jordan
  - platform: group
    name: lower_residence
    services:
      - service: william      
  - platform: group
    name: residents
    services:
#      - service: upper_residence
      - service: lower_residence
  - platform: group
    name: everyone
    services:
#      - service: caretakers
      - service: residents

script:
  notify:
    sequence:
      - service: script.notify_handler
        data_template: !include ../deps/notification_builder.yaml
  
  notify_handler:
    sequence:
#      - service: script.notify_show
#        data_template:
#          no_show: "{{ no_show }}"
#          message: "{{ message }}"
      - service: script.notify_push
        data_template:
          no_push: "{{ no_push }}"
          target: "{{ tell }}"
          message: "{{ message|replace('\n',' ')|replace('   ',' ')|replace('  ',' ') }}"
      - service: script.notify_say_now
        data_template:
          no_say: "{{ no_say }}"
          media_player: "{{ media_player }}"
          message: "{{ message|replace('\n',' ')|replace('   ',' ')|replace('  ',' ') }}"
      - service: script.notify_say_queue
        data_template:
          no_say: "{{ no_say }}"
          media_player: "{{ media_player }}"
          message: "{{ message|replace('\n',' ')|replace('   ',' ')|replace('  ',' ') }}"
          
  notify_push:
    sequence:
      - condition: template
        value_template: "{{ target|length > 0 and not no_push }}"
      - service_template: "notify.{{ target }}"
        data_template:
          message: "{{ message }}"
          data:
            inline_keyboard:
              - "Start:/start"
          
  notify_say_queue:
    sequence:
      - condition: template
        value_template: "{{ not no_say }}"
      - service: notify.queue
        data_template: 
          message: >-
            {"media_player":"{{ media_player }}","message":"{{ message }}"}
      
  notify_say_now:
    sequence:
      - condition: template
        value_template: "{{ not no_say }}"
      - service: input_boolean.turn_on
        entity_id: input_boolean.saying_notification
      - service: media_player.turn_on
        data_template:
          entity_id: "media_player.{{ media_player }}"
      - wait_template: "{{ is_state('media_player.' + media_player, 'idle') }}"
      - service: media_player.volume_set
        data_template:
          entity_id: "media_player.{{ media_player }}"
          volume_level: >
            {% if is_state('alarm_control_panel.lower_residence','armed_night')
            and media_player == 'lower_residence' %}0.6
            {% else %}0.7{% endif %}
      - delay: '00:00:01'
      - service: tts.google_say
        data_template:
          entity_id: "media_player.{{ media_player }}"
          message: "{{ message }}"
      - delay: '00:00:01'
      - wait_template: "{{ is_state('media_player.' + media_player, 'idle') }}"
      - service: input_boolean.turn_off
        entity_id: input_boolean.saying_notification